{"remainingRequest":"C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\src\\App.vue?vue&type=template&id=7ba5bd90&scoped=true&","dependencies":[{"path":"C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\src\\App.vue","mtime":1586030504968},{"path":"C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dell\\Desktop\\karka\\KRK\\bogateAplikacje\\apkaBAI\\sportsnewsapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}